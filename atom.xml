<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HHN</title>
  
  <subtitle>哪管他知识无穷无尽  进一寸有进一寸的欢喜</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://weixiaorensheng.github.io/"/>
  <updated>2018-10-31T14:24:33.797Z</updated>
  <id>https://weixiaorensheng.github.io/</id>
  
  <author>
    <name>HHN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用git、github、码云</title>
    <link href="https://weixiaorensheng.github.io/usegit.html"/>
    <id>https://weixiaorensheng.github.io/usegit.html</id>
    <published>2018-10-31T13:32:34.000Z</published>
    <updated>2018-10-31T14:24:33.797Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><div class="note primary"><h3 id="环境环境"><a href="#环境环境" class="headerlink" title="环境环境"></a>环境环境</h3><p><span id="inline-toc">1.</span>node.js<br><span id="inline-toc">2.</span>git <a href="https://gitee.com/all-about-git" target="_blank" rel="noopener">https://gitee.com/all-about-git</a><br><span id="inline-toc">3.</span></p></div><a id="more"></a><h2 id="GitHub-hexo-NEXT部署"><a href="#GitHub-hexo-NEXT部署" class="headerlink" title="GitHub+hexo+NEXT部署"></a>GitHub+hexo+NEXT部署</h2><p><span id="inline-toc">1.</span> 配置Github<br>&emsp;&emsp;注册github账号，建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】。</p><p><span id="inline-toc">2.</span> 配置SSH<br>由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以必须要让github仓库认证你SSH key，在此之前，必须要生成SSH key。<br>创建SSH Key。在windows下查看[c盘-&gt;用户-&gt;自己的用户名-&gt;.ssh]下是否有id_rsa、id_rsa.pub文件，如果没有需要手动生成。</p><p>1、首先需要检查你电脑是否已经有 SSH key<br>运行 git Bash 客户端，输入如下代码：</p><p>$ cd ~/.ssh<br>$ ls<br>这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。<br>打开git bash，在控制台中输入以下命令。</p><p>1<br>$ ssh-keygen -t rsa -C “<a href="mailto:youremail@example.com" target="_blank" rel="noopener">youremail@example.com</a>“<br>密钥类型可以用 -t 选项指定。如果没有指定则默认生成用于SSH-2的RSA密钥。这里使用的是rsa。</p><p>同时在密钥中有一个注释字段，用-C来指定所指定的注释，可以方便用户标识这个密钥，指出密钥的用途或其他有用的信息。所以在这里输入自己的邮箱或者其他都行。</p><p>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘&gt;用户&gt;自己的用户名&gt;.ssh]目录下已经生成好了。</p><p>第2步：登录github。打开setting-&gt;SSH keys，点击右上角 New SSH key，把生成好的公钥id_rsa.pub放进 key输入框中，再为当前的key起一个title来区分每个key。</p><p>https 和 SSH 的区别：<br>1、https可以随意clone github上的项目，SSH则是你必须是你要克隆的项目的拥有者或管理员，所以要先添加 SSH key ，证明你是拥有者，否则无法克隆。</p><p>2、https url 在push的时候是需要验证用户名和密码的；而 SSH 在push的时候则不需要密码，除非你配置SSH key的时候设置了密码，才需要输入密码的，否则是不需要输入密码的。</p><p>3、配置SSH-Key，网上有很多方法可供大家参考<br><a href="https://www.cnblogs.com/chuyanfenfei/p/8035067.html" target="_blank" rel="noopener">https://www.cnblogs.com/chuyanfenfei/p/8035067.html</a><br><a href="https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5" target="_blank" rel="noopener">4.3 服务器上的 Git - 生成 SSH 钥</a><br><span id="inline-toc">3.</span> 安装Hexo</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;div class=&quot;note primary&quot;&gt;&lt;h3 id=&quot;环境环境&quot;&gt;&lt;a href=&quot;#环境环境&quot; class=&quot;headerlink&quot; title=&quot;环境环境&quot;&gt;&lt;/a&gt;环境环境&lt;/h3&gt;&lt;p&gt;&lt;span id=&quot;inline-toc&quot;&gt;1.&lt;/span&gt;node.js&lt;br&gt;&lt;span id=&quot;inline-toc&quot;&gt;2.&lt;/span&gt;git &lt;a href=&quot;https://gitee.com/all-about-git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gitee.com/all-about-git&lt;/a&gt;&lt;br&gt;&lt;span id=&quot;inline-toc&quot;&gt;3.&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="使用hexo搭建个人博客免费部署" scheme="https://weixiaorensheng.github.io/categories/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="hexo" scheme="https://weixiaorensheng.github.io/tags/hexo/"/>
    
      <category term="git" scheme="https://weixiaorensheng.github.io/tags/git/"/>
    
      <category term="github" scheme="https://weixiaorensheng.github.io/tags/github/"/>
    
      <category term="码云" scheme="https://weixiaorensheng.github.io/tags/%E7%A0%81%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>javascript学习笔记</title>
    <link href="https://weixiaorensheng.github.io/javascript.html"/>
    <id>https://weixiaorensheng.github.io/javascript.html</id>
    <published>2018-10-27T13:43:33.000Z</published>
    <updated>2018-11-02T13:44:17.197Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="js代码开头分号"><a href="#js代码开头分号" class="headerlink" title="js代码开头分号"></a>js代码开头分号</h2><p>这个是防止报错的，因为我们的js代码结束都需要加一个;，其实不加也没有问题的，在做一些前端自动化时会对文件进行合并，也就是说可能会有另一个js文件加到你的文件前面。这样也不会有什么问题，因为有换行。如果再进行压缩就可能出事了，换行和空格都会被去掉。如果你前一个文件最后没有加; 它的内容就会下一个文件连到一起。就会造成方法错误。如果你在你的文件前面加一个;合并压缩时就相当时强制在你前面的一个文件最后加了一个;让他的结束掉就不会影响到你的文件了。就算他最后加了;加上你这个就会出现两;在一起，这样也不会报错。<br><a id="more"></a></p><h2 id="立即调用函数表达式"><a href="#立即调用函数表达式" class="headerlink" title="立即调用函数表达式"></a>立即调用函数表达式</h2><p>(function(){}())与(function(){})()<br><a href="https://en.wikipedia.org/wiki/Immediately-invoked_function_expression" target="_blank" rel="noopener">IIFE</a><br>通常的函数声明和调用分开的写法如下：</p><p>function foo() {/<em>…</em>/}     // 这是定义，Declaration；定义只是让解释器知道其存在，但是不会运行。</p><p>foo();                   // 这是语句，Statement；解释器遇到语句是会运行它的。</p><p>普通的函数声明function foo(){}是不会执行的。这里如果直接这样写function foo(){}()解释器会报错的，因为是错误的语法。<br>IIFE函数的调用方式通常是将函数表达式、它的调用操作符、分组操作符放到一个括号内，来告诉解释器这里有一个需要立即执行的函数。否则通常情况下，解析器遇到一个function关键字，都会把它当做是一个函数声明，而不是函数表达式。<br>如下几种写法都是可以的：</p><p>(function foo(){/<em>…</em>/}());</p><p>(function foo(){/<em>…</em>/})();</p><p>!function foo() {/<em>…</em>/}();</p><p>+function foo() {/<em>…</em>/}();</p><p>-function foo() {/<em>…</em>/}();</p><p>~function foo() {/<em>…</em>/}();</p><p>在需要表达式的场景下，就不需要用括号括起来了：</p><p>void function(){/<em>…</em>/}();</p><p>var foo = function(){/<em>…</em>/}();</p><p>true &amp;&amp; function () { /<em>…</em>/ }();</p><p>0, function () { /<em>…</em>/ }();</p><p>void声明了不需要返回值，第二个则将IIFE函数的返回值赋给了foo。第三、第四个都是明确需要表达式的场景，所以解析器会认识这种写法。</p><p>对于IIFE函数，也可以给它们传入参数，例如：</p><p>(function foo(arg1,arg2,…){…}(param1,param2,…));<br>1<br>对于常见的(function($){…})(jQuery);即是将实参jQuery传入函数function($){}，通过形参$接收。<br>上述函数中，最开始的那个括号，可能会由于js中自动分号插入机制而引发问题。例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a  =  b  +  c</span><br><span class="line">;（<span class="function"><span class="keyword">function</span>  （） </span>&#123;</span><br><span class="line">  <span class="comment">// code</span></span><br><span class="line">&#125;）（）;</span><br></pre></td></tr></table></figure></p><p>如果没有第二行的分号，那么该处有可能被解析为c()而开始执行。所以有的时候，可能会看到这样的写法：;(function foo(){/<em>…</em>/}())，前边的分号可以认为是防御型分号。</p><hr><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><p>文档对象模型（DOM，Document Object Model）是针对 XML 但经过扩展用于 HTML 的应用程序编程接口（API，Application Programming Interface），DOM 可被 JavaScript 用来读取、改变 HTML、XHTML 以及 XML 文档。</p><p>W3C DOM 标准被分为 3 个不同的部分：</p><p>核心 DOM - 针对任何结构化文档的标准模型<br>XML DOM - 针对 XML 文档的标准模型<br>HTML DOM - 针对 HTML 文档的标准模型<br>XML DOM</p><p>XML DOM定义了访问和操作 XML 文档的标准方法。</p><p>XML DOM 是：</p><p>用于 XML 的标准对象模型<br>用于 XML 的标准编程接口<br>中立于平台和语言<br>W3C 标准<br>XML DOM 定义了所有 XML 元素的对象和属性，以及访问它们的方法（接口）。</p><p>换句话说：XML DOM 是用于获取、更改、添加或删除 XML 元素的标准。</p><p>HTML DOM</p><p>HTML DOM定义了访问和操作 HTML 文档的标准方法。</p><p>HTML DOM 是：</p><p>HTML 的标准对象模型<br>HTML 的标准编程接口<br>W3C 标准<br>HTML DOM 定义了所有 HTML 元素的对象和属性，以及访问它们的方法（接口）。</p><p>换言之，HTML DOM 是关于如何获取、修改、添加或删除 HTML 元素的标准。</p><p>通过 JavaScript，可以重构整个 HTML 文档。可以添加、移除、改变或重排页面上的项目。要改变页面的某个东西，JavaScript 就需要获得对 HTML 文档中所有元素进行访问的入口。这个入口，连同对 HTML 元素进行添加、移动、改变或移除的方法和属性，都是通过文档对象模型来获得的（DOM）。</p><p>节点</p><p>DOM 把整个页面映射为一个多层节点结构，HTML 或 XML 页面中的每个组成部分都是某种类型的节点，这些节点又包含着不同类型的数据。</p><p>DOM 是这样规定的：</p><p>整个文档是一个文档节点</p><p>每个 HTML 标签元素是一个元素节点</p><p>包含在 HTML 元素中的文本是文本节点</p><p>每一个 HTML 属性是一个属性节点</p><p>注释属于注释节点</p><p>Node 层次</p><p>节点彼此都有等级关系。</p><p>HTML 文档中的所有节点组成了一个文档树（或节点树）。HTML 文档中的每个元素、属性、文本等都代表着树中的一个节点。树起始于文档节点，并由此继续伸出枝条，直到处于这棵树最低级别的所有文本节点为止。</p><p>下面这个图片表示一个文档树（节点树）：</p><p>通过 DOM 创建的这个表示文档的树形图，开发人员获得了控制页面内容和结构的主动权。借助 DOM 提供的 API，开发人员可以轻松自如地删除、添加、替换或修改任何节点。</p><p>访问节点</p><p>你可通过若干种方法来查找您希望操作的元素：</p><p>通过使用 getElementById() 和 getElementsByTagName() 方法</p><p>通过使用一个元素节点的 parentNode、firstChild 以及 lastChild 属性</p><p>getElementById() 和 getElementsByTagName() 这两种方法，可查找整个 HTML 文档中的任何 HTML 元素。</p><p>这两种方法会忽略文档的结构。假如您希望查找文档中所有的 </p><p> 元素，getElementsByTagName() 会把它们全部找到，不管 </p><p> 元素处于文档中的哪个层次。同时，getElementById() 方法也会返回正确的元素，不论它被隐藏在文档结构中的什么位置。</p><p>这两种方法会向您提供任何你所需要的 HTML 元素，不论它们在文档中所处的位置！</p><p>优点和缺点</p><p>DOM的优势主要表现在：易用性强，使用DOM时，将把所有的XML文档信息都存于内存中，并且遍历简单，支持XPath，增强了易用性。</p><p>DOM的缺点主要表现在：效率低，解析速度慢，内存占用量过高，对于大文件来说几乎不可能使用。另外效率低还表现在大量的消耗时间，因为使用DOM进行解析时，将为文档的每个element、attribute、processing-instruction和comment都创建一个对象，这样在DOM机制中所运用的大量对象的创建和销毁无疑会影响其效率。</p><p>浏览器对象模型（BOM）</p><p>Internet Explorer 3和 Netscape Navigator 3有一个共同的特色，那就是支持可以访问和操作浏览器窗口的浏览器对象模型（BOM，Browser Object Model）。开发人员使用 BOM 可以控制浏览器显示的页面以外的部分。而 BOM 真正与众不同的地方（也是经常会导致问题的地方），还是它作为 JavaScript 实现的一部分但却没有相关的标准。这个问题在 HTML5 中得到了解决，HTML5 致力于把很多 BOM 功能写入正式规范。HTML5 发布后，很多关于 BOM 的困惑烟消云散。</p><p>从根本上讲，BOM 只处理浏览器窗口和框架；但人们习惯上也把所有针对浏览器的 JavaScript 扩展算作 BOM 的一部分。下面就是一些这样的扩展：</p><p>弹出新浏览器窗口的功能；</p><p>移动、缩放和关闭浏览器窗口的功能；</p><p>提供浏览器详细信息的对象；</p><p>提供浏览器所加载页面的详细信息的对象；</p><p>提供用户显示器分辨率详细信息的对象；</p><p>对 cookies 的支持；</p><p>像和 IE 的这样的自定义对象。</p><p>由于没有 BOM 标准可以遵循，因此每个浏览器都有自己的实现。虽然也存在一些事实标准，例如要有对象和对象等，但每个浏览器都会为这两个对象乃至其他对象定义自己的属性和方法。现在有了 HTML5，BOM 实现的细节有望朝着兼容性越来越高的方向发展。</p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><h2 id="事件属性"><a href="#事件属性" class="headerlink" title="事件属性"></a>事件属性</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;js代码开头分号&quot;&gt;&lt;a href=&quot;#js代码开头分号&quot; class=&quot;headerlink&quot; title=&quot;js代码开头分号&quot;&gt;&lt;/a&gt;js代码开头分号&lt;/h2&gt;&lt;p&gt;这个是防止报错的，因为我们的js代码结束都需要加一个;，其实不加也没有问题的，在做一些前端自动化时会对文件进行合并，也就是说可能会有另一个js文件加到你的文件前面。这样也不会有什么问题，因为有换行。如果再进行压缩就可能出事了，换行和空格都会被去掉。如果你前一个文件最后没有加; 它的内容就会下一个文件连到一起。就会造成方法错误。如果你在你的文件前面加一个;合并压缩时就相当时强制在你前面的一个文件最后加了一个;让他的结束掉就不会影响到你的文件了。就算他最后加了;加上你这个就会出现两;在一起，这样也不会报错。&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://weixiaorensheng.github.io/tags/js/"/>
    
      <category term="javascript" scheme="https://weixiaorensheng.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>deploypage</title>
    <link href="https://weixiaorensheng.github.io/deploypage.html"/>
    <id>https://weixiaorensheng.github.io/deploypage.html</id>
    <published>2018-10-24T07:19:08.000Z</published>
    <updated>2018-10-24T12:16:12.242Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="使用github免费部署静态网站"><a href="#使用github免费部署静态网站" class="headerlink" title="使用github免费部署静态网站"></a>使用github免费部署静态网站</h2><p><blockquote class="default">默认git已安装，ssh已配置。</blockquote><br><a id="more"></a></p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>新建仓库Repository，填写仓库的名字，勾选public和Initalize this repository with a README.并点击创建。<br><img src="/deploypage/create.png" title="[创建仓库]"></p><p>仓库创建好后点击setting<br><img src="/deploypage/setting.png" title="[setting]"><br>然后下划找到github pages，选择master branch，然后点击save按钮保存。<br><img src="/deploypage/master.png" title="[master]"><br>保存后出现的链接就是静态页面的预览地址，网页内容是默认的readme文件<br><img src="/deploypage/site.png" title="[site]"></p><h2 id="网站上传"><a href="#网站上传" class="headerlink" title="网站上传"></a>网站上传</h2><p>先下载创建好的仓库到本地(open in desktop需要下载桌面版，建议使用这个)<br><img src="/deploypage/download.png" title="[download]"><br>点击clone下载</p><img src="/deploypage/clone.png" title="[clone]"><p>然后复制自己项目的项目到仓库文件夹中，然后commit<br><img src="/deploypage/commit.png" title="[commit]"><br>完成，接下来就可以通过链接访问网站了</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><div class="note warning"><p>&emsp;&emsp;默认将index.html页面当做初始界面，如果将index.html放入目录结构中，部署发布后，github会再自动生成一个index.html页面，会出现更新无效等情况。还有params.json会配置github给你生成的模板信息。</p></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用github免费部署静态网站&quot;&gt;&lt;a href=&quot;#使用github免费部署静态网站&quot; class=&quot;headerlink&quot; title=&quot;使用github免费部署静态网站&quot;&gt;&lt;/a&gt;使用github免费部署静态网站&lt;/h2&gt;&lt;p&gt;&lt;blockquote class=&quot;default&quot;&gt;默认git已安装，ssh已配置。&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
      <category term="在github上部署静态网站" scheme="https://weixiaorensheng.github.io/categories/%E5%9C%A8github%E4%B8%8A%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="github deploy" scheme="https://weixiaorensheng.github.io/tags/github-deploy/"/>
    
  </entry>
  
  <entry>
    <title>google_debug</title>
    <link href="https://weixiaorensheng.github.io/google-debug.html"/>
    <id>https://weixiaorensheng.github.io/google-debug.html</id>
    <published>2018-10-23T12:48:32.000Z</published>
    <updated>2018-10-23T13:10:22.382Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Google浏览器查看鼠标滑过的css"><a href="#Google浏览器查看鼠标滑过的css" class="headerlink" title="Google浏览器查看鼠标滑过的css"></a>Google浏览器查看鼠标滑过的css</h2><div class="note "><p>&emsp;&emsp;网页的很多元素都添加有:hover,而这些元素的css只有鼠标悬浮时才能查看，当你鼠标移开元素想看他的css代码时，css也跟着恢复为:link状态，还有的是鼠标停留时class类名改变，当你移开鼠标想去选择类名查看时，类名又恢复了，这时应该怎么查看呢？</p></div><p>很简单,点击选中代码左侧的三个小点，选择hover：如下图</p><a id="more"></a><img src="/google-debug/google_debug.png" title="[debug]"><p>右边同样可以设置，选中hover，如图：</p><img src="/google-debug/debug.png" title="[debug]"><p>然后就可以查看鼠标悬浮时的css样式了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Google浏览器查看鼠标滑过的css&quot;&gt;&lt;a href=&quot;#Google浏览器查看鼠标滑过的css&quot; class=&quot;headerlink&quot; title=&quot;Google浏览器查看鼠标滑过的css&quot;&gt;&lt;/a&gt;Google浏览器查看鼠标滑过的css&lt;/h2&gt;&lt;div class=&quot;note &quot;&gt;&lt;p&gt;&amp;emsp;&amp;emsp;网页的很多元素都添加有:hover,而这些元素的css只有鼠标悬浮时才能查看，当你鼠标移开元素想看他的css代码时，css也跟着恢复为:link状态，还有的是鼠标停留时class类名改变，当你移开鼠标想去选择类名查看时，类名又恢复了，这时应该怎么查看呢？&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;很简单,点击选中代码左侧的三个小点，选择hover：如下图&lt;/p&gt;
    
    </summary>
    
      <category term="debug" scheme="https://weixiaorensheng.github.io/categories/debug/"/>
    
    
      <category term="debug" scheme="https://weixiaorensheng.github.io/tags/debug/"/>
    
      <category term="web调试" scheme="https://weixiaorensheng.github.io/tags/web%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Git Bash使用</title>
    <link href="https://weixiaorensheng.github.io/git.html"/>
    <id>https://weixiaorensheng.github.io/git.html</id>
    <published>2018-10-19T13:34:33.000Z</published>
    <updated>2018-10-22T07:38:26.651Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-与-SVN-区别"><a href="#Git-与-SVN-区别" class="headerlink" title="Git 与 SVN 区别"></a>Git 与 SVN 区别</h2><a id="more"></a><p><blockquote class="default">SVN是集中式的版本控制系统，而Git是分布式版本控制系统。</blockquote><br>&emsp;&emsp;先说集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。<br>&emsp;&emsp;分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，你工作的时候，就不需要联网了，因为版本库就在你自己的电脑上。既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。<br>&emsp;&emsp;和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">下载地址</a><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a><br>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”,出现类似命令行的窗口，说明安装成功。<br>安装完成后，还需要最后一步设置，在命令行输入：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>--global user.name <span class="string">"Your Name"</span></span><br><span class="line">$ git<span class="built_in"> config </span>--global user.email <span class="string">"email@example.com"</span></span><br></pre></td></tr></table></figure></p><div class="note info"><p>提示：git config  –global 参数，有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然你也可以对某个仓库指定的不同的用户名和邮箱。<br></p></div><h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><div class="note info"><p>什么是版本库？版本库又名仓库，英文名repository,你可以简单的理解一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改，删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻还可以将文件”还原”。<br></p></div><br><span id="inline-toc">1.</span>选择一个合适的地方，创建一个空目录<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir testgit</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> testgit</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">pwd</span></span></span><br></pre></td></tr></table></figure><br><br><blockquote class="default"><code>pwd</code>命令用于显示当前目录。</blockquote><br><span id="inline-toc">2.</span>通过命令 <code>git init</code> 把这个目录变成git可以管理的仓库<br><br><img src="/git/init.png" title="[git init]"><br><div class="note warning"><p>为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。<br></p></div><h2 id="git创建版本库时-没有在文件夹下自动生成-git文件夹"><a href="#git创建版本库时-没有在文件夹下自动生成-git文件夹" class="headerlink" title="git创建版本库时 没有在文件夹下自动生成.git文件夹"></a>git创建版本库时 没有在文件夹下自动生成.git文件夹</h2><div class="note info"><p>这时候你当前testgit目录下会多了一个.git的目录，这个目录是Git来跟踪管理版本的，没事千万不要手动乱改这个目录里面的文件，否则，会把git仓库给破坏了。但是.git文件夹默认为隐藏属性，因此需要通过设置系统属性，才能看到这个文件夹：具体方法不同版本操作系统设置不一。我的是win10系统，将 <strong>‘隐藏的项目’</strong> 勾选就好了<br></p></div><br><img src="/git/hide.png" title="[显示隐藏文件]"><br><br><h2> 添加文件到版本库</h2><br>&emsp;&emsp;首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。<br><br><div class="note primary"><p>不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，如果要真正使用版本控制系统，就要以纯文本方式编写文件。</p></div><p>在版本库testgit目录下新建一个记事本文件 test.txt 内容随意：11111111<br>第一步，用命令<code>git add</code>告诉Git，把文件添加到仓库：<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">add</span><span class="bash"> test.txt</span></span><br></pre></td></tr></table></figure></p><p>没有任何提示，说明已经添加成功了。</p><p>第二步，用命令<code>git commit</code>告诉Git，把文件提交到仓库：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git commit -m <span class="string">"这是提交的注释说明"</span></span></span><br></pre></td></tr></table></figure></p><p>简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p><p>为什么Git添加文件需要add，commit一共两步呢？因为commit可以一次提交很多文件，所以你可以多次add不同的文件，比如：<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">add</span><span class="bash"> file1.txt</span></span><br><span class="line"><span class="bash">$ git add file2.txt file3.txt</span></span><br><span class="line"><span class="bash">$ git commit -m <span class="string">"add 3 files."</span></span></span><br></pre></td></tr></table></figure></p><div class="note danger"><p>千万不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。</p></div><div class="note primary"><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><a href="http://www.runoob.com/w3cnote/git-five-minutes-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743858312764dca7ad6d0754f76aa562e3789478044000" target="_blank" rel="noopener">廖雪峰git教程</a></li><li><a href="https://blog.csdn.net/wangrenbao123/article/details/55511461/" target="_blank" rel="noopener">git使用详细教程</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git-与-SVN-区别&quot;&gt;&lt;a href=&quot;#Git-与-SVN-区别&quot; class=&quot;headerlink&quot; title=&quot;Git 与 SVN 区别&quot;&gt;&lt;/a&gt;Git 与 SVN 区别&lt;/h2&gt;
    
    </summary>
    
      <category term="git" scheme="https://weixiaorensheng.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://weixiaorensheng.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>web字体使用</title>
    <link href="https://weixiaorensheng.github.io/font.html"/>
    <id>https://weixiaorensheng.github.io/font.html</id>
    <published>2018-10-17T14:18:13.000Z</published>
    <updated>2018-10-17T14:38:41.594Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="中文字体"><a href="#中文字体" class="headerlink" title="中文字体"></a>中文字体</h2><ul><li><a href="https://ruby-china.org/topics/14005" target="_blank" rel="noopener">web中文字体应用指南</a></li></ul><div class="note primary"><h4 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h4><p><strong>字体声明 同时声明中文字体的字体名称（英文）和显示名称（中文） 永远不要忘记声明英文字体，并且英文字体应该在中文字体之前</strong></p></div><p><a href="http://www.ruanyifeng.com/blog/2014/07/chinese_fonts.html" target="_blank" rel="noopener">中文字体网页开发指南</a></p><h2 id="英文字体"><a href="#英文字体" class="headerlink" title="英文字体"></a>英文字体</h2><p><a href="http://www.ruanyifeng.com/blog/2008/06/typography_notes.html" target="_blank" rel="noopener">字体笔记</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="字体 font" scheme="https://weixiaorensheng.github.io/categories/%E5%AD%97%E4%BD%93-font/"/>
    
    
      <category term="字体" scheme="https://weixiaorensheng.github.io/tags/%E5%AD%97%E4%BD%93/"/>
    
      <category term="font" scheme="https://weixiaorensheng.github.io/tags/font/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序-食物营养成分查询的实现</title>
    <link href="https://weixiaorensheng.github.io/wxapp-food.html"/>
    <id>https://weixiaorensheng.github.io/wxapp-food.html</id>
    <published>2018-10-16T08:21:09.000Z</published>
    <updated>2018-10-21T12:58:37.526Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote class="blockquote-center">  <strong>小程序页面开发</strong> </blockquote><a id="more"></a><h1 id="1-开始"><a href="#1-开始" class="headerlink" title="1.开始"></a><span id="inline-toc">1.</span>开始</h1><h2 id="起步-（小程序官方文档）"><a href="#起步-（小程序官方文档）" class="headerlink" title="起步 （小程序官方文档）"></a>起步 （<a href="http://developers.weixin.qq.com/miniprogram/dev/index.html" target="_blank" rel="noopener">小程序官方文档</a>）</h2><blockquote class="default"><br>   <strong>申请账号</strong><br>&emsp;&emsp;点击 <a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1" target="_blank" rel="noopener">https://mp.weixin.qq.com/wxopen/waregister?action=step1</a> 根据指引填写信息和提交相应的资料，就可以拥有自己的小程序帐号。登录 <a href="https://mp.weixin.qq.com" target="_blank" rel="noopener">https://mp.weixin.qq.com</a> ，我们可以在菜单 “设置”-“开发设置” 看到小程序的 AppID 了 。<br>   <strong>安装开发工具</strong><br>   &emsp;&emsp;前往 <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html?t=18101520" target="_blank" rel="noopener">开发者工具下载页面</a> ，根据自己的操作系统下载对应的安装包进行安装，有关开发者工具更详细的介绍可以查看 《开发者工具介绍》 。打开小程序开发者工具，用微信扫码登录开发者工具，就可以开始开发了。<br></blockquote><h2 id="代码构成"><a href="#代码构成" class="headerlink" title="代码构成"></a>代码构成</h2><div class="note info"><h4 id="微信小程序中就四种类型的文件"><a href="#微信小程序中就四种类型的文件" class="headerlink" title="微信小程序中就四种类型的文件"></a><strong>微信小程序中就四种类型的文件</strong></h4><ul><li>js ———— JavaScrip文件</li><li>json ——— 项目配置文件，负责窗口颜色等等</li><li>wxml ——– 类似HTML文件</li><li>wxss ——— 类似CSS文件</li></ul></div><hr><h1 id="2-开发"><a href="#2-开发" class="headerlink" title="2.开发"></a><span id="inline-toc">2.</span>开发</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>通过搜索食物名查询食物营养<br><img src="/wxapp-food/home.png" title="[app首页]"></p><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><div class="note info"><h4 id="框架图标"><a href="#框架图标" class="headerlink" title="框架图标"></a><strong>框架图标</strong></h4><ul><li>UI框架 ———— <a href="https://weapp.iviewui.com/docs/guide/start" target="_blank" rel="noopener">iView Weapp</a></li><li>图标 ——— <a href="http://www.iconfont.cn/plus/collections/index" target="_blank" rel="noopener">阿里图标图iconfont</a></li></ul></div><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><a href="#-1">iView</a></li><li class="tab"><a href="#-2">iconfont</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><p>到 <a href="https://github.com/TalkingData/iview-weapp" target="_blank" rel="noopener">GitHub</a> 下载 iView Weapp 的代码，将 <span class="label warning">dist</span> 目录拷贝到自己的项目中。<br><img src="/wxapp-food/dist.png" title="[dist]"></p></div><div class="tab-pane" id="-2"><p><a href="http://www.cnblogs.com/wesky/p/7593115.html" target="_blank" rel="noopener">在微信小程序中使用阿里图标</a></p><p><blockquote class="default"> ①下载图标 </blockquote><br><img src="/wxapp-food/iconfont.png" title="[下载图标]"></p><p><blockquote class="default"> ②转换iconfont.ttf文件 </blockquote></p><p><div class="note info"><p>小程序的wxss文件的font-face的url不接受http地址作为参数,但可以接受base64,因此需将字体文件下载后,转换为base64。用网址<a href="https://transfonter.org/转换" target="_blank" rel="noopener">https://transfonter.org/转换</a></p></div><br><img src="/wxapp-food/ttf.png" title="[转换ttf文件]"></p><p><blockquote class="default"> ③将文件放进微信小程序</blockquote></p><p><div class="note info"><p>复制iconfont.css中的代码，粘贴至小程序ivew 的dist目录中的icon的index.wxss dist/icon/index.wxss，这样就可以使用iview的方式使用阿里图标了</p></div><br><img src="/wxapp-food/addicon.png" title="[添加图标]"></p><p><blockquote class="default"> ④界面（wxml）中引用：</blockquote><br><code>&lt;i-icon class=&#39;wicon&#39; type=&quot;iconfont icon-nv&quot; size=&#39;24&#39;  color=&quot;white&quot; /&gt;</code></p></div></div></div><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>项目主要分为首页(home)、搜索(search)、详情(entry)三个页面<br><div class="note info"><p>点击搜索按钮将home页面的input文本域的值跨页面传到search页面，在search判断搜索值是否为空，为空则弹出提示，不为空则直接搜索，并返回食物列表，然后点击进入食物营养成分的详情页面。</p></div></p><h2 id="域名备案"><a href="#域名备案" class="headerlink" title="域名备案"></a>域名备案</h2><p>腾讯云申请云服务器和域名<br><div class="note info"><p>下载ssl证书<a href="https://cloud.tencent.com/document/product/400/8422" target="_blank" rel="noopener">教程</a></p></div></p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>在小程序后台的设置-开发设置中绑定备案的域名</p><img src="/wxapp-food/addname.png" title="[绑定域名]"><div class="note primary"><p>然后在开发工具中上传代码，上传后就是开发版本，将开发版本提交审核通过后就发布了线上版本，在微信中就可以搜索到开发版的小程序了。</p></div><img src="/wxapp-food/shangxian.png" title="[上线]"><hr><blockquote class="blockquote-center"> <strong>后台开发</strong> </blockquote><h1 id="1、配置apache"><a href="#1、配置apache" class="headerlink" title="1、配置apache"></a>1、配置apache</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;  &lt;strong&gt;小程序页面开发&lt;/strong&gt; &lt;/blockquote&gt;
    
    </summary>
    
      <category term="小程序" scheme="https://weixiaorensheng.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信" scheme="https://weixiaorensheng.github.io/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="小程序" scheme="https://weixiaorensheng.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>jquery选择器</title>
    <link href="https://weixiaorensheng.github.io/select.html"/>
    <id>https://weixiaorensheng.github.io/select.html</id>
    <published>2018-10-15T11:56:47.000Z</published>
    <updated>2018-10-27T02:17:33.088Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>jQuery 事件 - ready() 方法</p><p>在文档加载后激活函数：</p><p>定义和用法<br>当 DOM（文档对象模型） 已经加载，并且页面（包括图像）已经完全呈现时，会发生 ready 事件。</p><p>由于该事件在文档就绪后发生，因此把所有其他的 jQuery 事件和函数置于该事件中是非常好的做法。正如上面的例子中那样。</p><p>ready() 函数规定当 ready 事件发生时执行的代码。</p><p>ready() 函数仅能用于当前文档，因此无需选择器。</p><p>允许使用以下三种语法：</p><p>语法 1<br>$(document).ready(function)<br>语法 2<br>$().ready(function)<br>语法 3<br>$(function)<br>参数    描述<br>function    必需。规定当文档加载后要运行的函数。<br>提示和注释<br>提示：ready() 函数不应与 <body onload=""> 一起使用。</body></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="css js" scheme="https://weixiaorensheng.github.io/categories/css-js/"/>
    
    
      <category term="css" scheme="https://weixiaorensheng.github.io/tags/css/"/>
    
      <category term="js" scheme="https://weixiaorensheng.github.io/tags/js/"/>
    
      <category term="选择器" scheme="https://weixiaorensheng.github.io/tags/%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    
      <category term="过滤器" scheme="https://weixiaorensheng.github.io/tags/%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客文章编写使用示例</title>
    <link href="https://weixiaorensheng.github.io/usehexo.html"/>
    <id>https://weixiaorensheng.github.io/usehexo.html</id>
    <published>2018-10-07T13:37:44.000Z</published>
    <updated>2018-10-21T13:13:50.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="文章阅读更多"><a href="#文章阅读更多" class="headerlink" title="文章阅读更多"></a>文章阅读更多</h2><div class="note default"><p>&emsp;&emsp;文章缩略，只显示文章部分，点击阅读全文按钮阅读全篇文章。在文章适当的位置加入<code>&lt;!--more--&gt;</code>即可。</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--more--&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="note"><a href="#note" class="headerlink" title="note"></a>note</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note danger %&#125; 用过的东西总是会忘记，还是记下来比较好 &#123;% endnote %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note default"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>default  default primary success info warning danger<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% label default@default %&#125;</span><br></pre></td></tr></table></figure><div class="note danger"><p>用过的东西总是会忘记，还是记下来比较好 </p></div><div class="note default"><p>default  default primary success info warning danger</p></div><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">&gt; 引用</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"danger"</span>&gt;</span> 引用<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"default"</span>&gt;</span> 引用<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-center"</span>&gt;</span>居中<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">cq</span> %&#125;</span><span class="xml">居中</span><span class="template-tag">&#123;% <span class="name">endcq</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><blockquote><p>引用</p></blockquote><blockquote class="danger"> 引用 </blockquote><blockquote class="default"> 引用 </blockquote><blockquote class="blockquote-center">居中</blockquote><blockquote class="blockquote-center"><p>居中</p></blockquote><h2 id="tab选项卡"><a href="#tab选项卡" class="headerlink" title="tab选项卡"></a>tab选项卡</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs 选项卡, 2 %&#125;</span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**这是选项卡 1**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**这是选项卡 2**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**这是选项卡 3**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><blockquote class="default"> <a href="https://almostover.ru/2016-01/hexo-theme-next-test/" target="_blank" rel="noopener">参考文章</a> </blockquote><div class="tabs" id="选项卡"><ul class="nav-tabs"><li class="tab"><a href="#选项卡-1">选项卡 1</a></li><li class="tab active"><a href="#选项卡-2">选项卡 2</a></li><li class="tab"><a href="#选项卡-3">选项卡 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="选项卡-1"><p><strong>这是选项卡 1</strong></p></div><div class="tab-pane active" id="选项卡-2"><p><strong>这是选项卡 2</strong></p></div><div class="tab-pane" id="选项卡-3"><p><strong>这是选项卡 3</strong></p></div></div></div><h2 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h2><ol><li><i class="fa fa-pencil"></i> 支持 Markdown<br><i>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</i></li><li><i class="fa fa-cloud-upload"></i> 一件部署<br><i>只需一条指令即可部署到 GitHub Pages，或其他网站。</i></li><li><i class="fa fa-cog"></i> 丰富的插件<br><i>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade，CoffeeScript。</i></li></ol><ul><li><i class="fa fa-pencil"></i> 铅笔</li><li><i class="fa fa-cloud-upload"></i> 上传</li><li><p><i class="fa fa-download"></i> 下载</p></li><li><p><i class="fa fa-download"></i> 下载</p></li><li><i class="fa fa-download fa-lg"></i> 下载变大 33%</li><li><i class="fa fa-download fa-2x"></i> 下载两倍大</li></ul><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=<span class="string">"inline-toc"</span>&gt;<span class="number">1.</span>&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">code</span> <span class="keyword">class</span>=<span class="string">"language-html"</span>&gt;<span class="keyword">code</span>&lt;/<span class="keyword">code</span>&gt;</span><br><span class="line">`<span class="keyword">code</span>`</span><br></pre></td></tr></table></figure><p><span id="inline-toc">1.</span></p><p><code class="language-html">code</code><br><code>code</code></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><!--more--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/images/bg.png"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/bg.png"></p><h3 id="1-在站点配置文件-config-yml中将post-asset-folder设置为true-即："><a href="#1-在站点配置文件-config-yml中将post-asset-folder设置为true-即：" class="headerlink" title="1.在站点配置文件_config.yml中将post_asset_folder设置为true 即："></a>1.在站点配置文件_config.yml中将post_asset_folder设置为true 即：</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span><span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="2-在hexo的目录下执行"><a href="#2-在hexo的目录下执行" class="headerlink" title="2.在hexo的目录下执行"></a>2.在hexo的目录下执行</h3> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:<span class="regexp">//gi</span>thub.com<span class="regexp">/CodeFalling/</span>hexo-asset-image --save</span><br></pre></td></tr></table></figure><h3 id="3-安装完成"><a href="#3-安装完成" class="headerlink" title="3.安装完成"></a>3.安装完成</h3><p>&emsp;&emsp;完成安装后用hexo新建文章的时候会发现<code>_posts</code>目录下面会多出一个和文章名字一样的文件夹。</p><h3 id="4-插入图片"><a href="#4-插入图片" class="headerlink" title="4.插入图片"></a>4.插入图片</h3><p>最好通过相对路径标签引用资源，而不是markdown语法引用，有时后面两种方法引入图片会失败。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img pic04.jpg [测试成功] %&#125;</span><br><span class="line">![<span class="string">测试失败</span>](<span class="link">/usehexo/pic04.jpg</span>)</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/usehexo/pic04.jpg"</span> <span class="attr">alt</span>=<span class="string">"测试失败"</span> /&gt;</span></span></span><br></pre></td></tr></table></figure></p><img src="/usehexo/pic04.jpg" title="[测试成功]"><p><img src="/usehexo/pic04.jpg" alt="测试失败"><br><img src="/usehexo/pic04.jpg" alt="测试失败"></p><blockquote class="default">tips:<br>博客source路径下自建图片文件夹<span class="label warning">source\images</span>(本篇文章开头第一张背景图就放在了自建文件夹里)<br>next主题的图片文件夹<span class="label warning">themes\next\source\images</span><br>两个图片文件夹的访问方式相同 ：<span class="label warning"> /images/图片名/</span>，将图片放在任一文件夹都可以。<br></blockquote><h2 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">450</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=0&amp;id=2321407097&amp;auto=1&amp;height=430"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    "autoplay": false,</span><br><span class="line">    "showlrc": 3,</span><br><span class="line">    "mutex": true,</span><br><span class="line">    "music": [</span><br><span class="line">        &#123;</span><br><span class="line">            "title": "PLANET",</span><br><span class="line">            "author": "ラムジ",</span><br><span class="line">            "url": "https://music.163.com/#/song?id=812400",</span><br><span class="line">            "pic": "https://封面图.jpg",</span><br><span class="line">            "lrc": "https://歌词.lrc"</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            "title": "起风了（Cover 高橋優",</span><br><span class="line">            "author": "歌手名",</span><br><span class="line">            "url": "https://music.163.com/#/song?id=461525011",</span><br><span class="line">            "pic": "https://封面图.jpg",</span><br><span class="line">            "lrc": "https://歌词.lrc"</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="//music.163.com/outchain/player?type=0&id=2321407097&auto=1&height=430"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文章阅读更多&quot;&gt;&lt;a href=&quot;#文章阅读更多&quot; class=&quot;headerlink&quot; title=&quot;文章阅读更多&quot;&gt;&lt;/a&gt;文章阅读更多&lt;/h2&gt;&lt;div class=&quot;note default&quot;&gt;&lt;p&gt;&amp;emsp;&amp;emsp;文章缩略，只显示文章部分，点击阅读全文按钮阅读全篇文章。在文章适当的位置加入&lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;即可。&lt;/p&gt;&lt;/div&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo 博客编写常用" scheme="https://weixiaorensheng.github.io/categories/hexo-%E5%8D%9A%E5%AE%A2%E7%BC%96%E5%86%99%E5%B8%B8%E7%94%A8/"/>
    
    
      <category term="hexo" scheme="https://weixiaorensheng.github.io/tags/hexo/"/>
    
      <category term="hexo文章" scheme="https://weixiaorensheng.github.io/tags/hexo%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>HTML文字文本美化效果</title>
    <link href="https://weixiaorensheng.github.io/text.html"/>
    <id>https://weixiaorensheng.github.io/text.html</id>
    <published>2018-10-05T13:49:37.000Z</published>
    <updated>2018-10-21T13:05:05.656Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div class="note primary"><p>text-stroke(文本描边)和text-fill-color(文本填充色)</p></div><br><a id="more"></a></p><blockquote class="blockquote-center"><br>text-fill-color设置对象中的文字填充颜色<br>text-stroke设置对象中的文字的描边厚度与颜色<br></blockquote><blockquote class="default"><ul><li>text-fill-color检索或设置对象中的文字填充颜色,若同时设置text-fill-color和color，text-fill-color会覆盖color所定义的字体颜色；</li><li>text-fill-color是css3的新属性，兼容性很差，只适用于webkit内核的浏览器有效果。</li><li>通过text-fill-color属性，可以做出一些例如<a href="http://demo.doyoe.com/css3/text-fill-color/gradient-text.htm" target="_blank" rel="noopener">渐变文字</a>和<a href="http://demo.doyoe.com/css3/text-fill-color/hollow-text.htm" target="_blank" rel="noopener">镂空文字</a>的效果。</li></ul><p></p></blockquote><p></p><h2 id="镂空文字"><a href="#镂空文字" class="headerlink" title="镂空文字"></a>镂空文字</h2><blockquote><p>未定义text-stroke-color的文字</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-webkit-text-fill-color</span><span class="selector-pseudo">:transparent</span>;</span><br><span class="line"><span class="selector-tag">-webkit-text-stroke</span><span class="selector-pseudo">:1px</span> <span class="selector-id">#000</span>;</span><br></pre></td></tr></table></figure><blockquote><p>未添加文字描边</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.fill-text</span>&#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span><span class="selector-pseudo">:-webkit-linear-gradient(</span><span class="selector-id">#eee</span>,<span class="selector-id">#000</span>);</span></span><br><span class="line"><span class="css">  <span class="selector-tag">-webkit-background-clip</span><span class="selector-pseudo">:text</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">-webkit-text-fill-color</span><span class="selector-pseudo">:transparent</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>添加文字描边</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>:-webkit-linear-gradient(<span class="number">#eee</span>,<span class="number">#000</span>);</span><br><span class="line">-webkit-<span class="attribute">background-clip</span>:text;</span><br><span class="line">-webkit-text-fill-<span class="attribute">color</span>:transparent;</span><br><span class="line">-webkit-text-stroke:<span class="number">1px</span> transparent;</span><br></pre></td></tr></table></figure><p>text-stroke-color透明值让文字更柔和，对比你会发现添加文字描边更柔和一点</p><hr><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*文字填充色为透明*/</span></span><br><span class="line"><span class="selector-tag">-webkit-text-fill-color</span><span class="selector-pseudo">:transparent</span>;</span><br><span class="line"><span class="comment">/* background-clip 规定背景的绘制区域  背景剪裁为文字，相当于用背景填充文字 CSS3新属性*/</span>  </span><br><span class="line"><span class="selector-tag">background-clip</span><span class="selector-pseudo">:text</span>;</span><br><span class="line"><span class="selector-tag">background-image</span><span class="selector-pseudo">:-webkit-linear-gradient(left</span>,<span class="selector-id">#3498db</span>,<span class="selector-id">#f47920</span> 10%,<span class="selector-id">#d71345</span> 20%,<span class="selector-id">#f7acbc</span> 30%,<span class="selector-id">#ffd400</span> 40%,<span class="selector-id">#3498db</span> 50%,<span class="selector-id">#f47920</span> 60%,<span class="selector-id">#d71345</span> 70%,<span class="selector-id">#f7acbc</span> 80%,<span class="selector-id">#ffd400</span> 90%,<span class="selector-id">#3498db</span>);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">margin</span>: <span class="number">0</span>;<span class="attribute">padding</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">._borderWrap</span>&#123;</span></span><br><span class="line"><span class="undefined">            width: 180px;</span></span><br><span class="line"><span class="undefined">            height: 150px;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            left: 23%;</span></span><br><span class="line"><span class="undefined">            top: 25%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">._border</span>&#123;</span></span><br><span class="line"><span class="undefined">            line-height: 145px;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            font-size: 40px;</span></span><br><span class="line"><span class="undefined">            font-weight: bolder;</span></span><br><span class="line"><span class="undefined">            -webkit-text-fill-color: transparent;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-image</span>:  <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">left</span>,<span class="selector-id">#129835</span>,<span class="selector-id">#ece648</span> 25%,<span class="selector-id">#129835</span> 50%,<span class="selector-id">#F9E92B</span> 75%,<span class="selector-tag">rgb</span>(40, 150, 38));</span></span><br><span class="line"><span class="undefined">            background-size: 200%,100%;</span></span><br><span class="line"><span class="undefined">            -webkit-background-clip: text;</span></span><br><span class="line"><span class="undefined">            -webkit-animation: word 5s linear infinite ;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        @<span class="keyword">keyframes</span> word &#123;</span></span><br><span class="line"><span class="css">            0%&#123;<span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">            100%&#123;<span class="attribute">background-position</span>: -<span class="number">100%</span> <span class="number">0</span>&#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"_borderWrap"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"_border"</span>&gt;</span>你的名字<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS文字描边属性text-stroke</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;text-stroke(文本描边)和text-fill-color(文本填充色)&lt;/p&gt;&lt;/div&gt;&lt;br&gt;
    
    </summary>
    
      <category term="HTML" scheme="https://weixiaorensheng.github.io/categories/HTML/"/>
    
    
      <category term="html" scheme="https://weixiaorensheng.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>location</title>
    <link href="https://weixiaorensheng.github.io/location.html"/>
    <id>https://weixiaorensheng.github.io/location.html</id>
    <published>2018-09-23T14:29:26.000Z</published>
    <updated>2018-10-21T14:32:47.704Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><i class="fa fa-pencil"></i> 支持 Markdown<br><i>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</i></li><li><i class="fa fa-cloud-upload"></i> 一件部署<br><i>只需一条指令即可部署到 GitHub Pages，或其他网站。</i></li><li><i class="fa fa-cog"></i> 丰富的插件<br><i>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade，CoffeeScript。</i></li></ol><p>js隐藏与显示回到顶部按钮<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;   </span><br><span class="line">   <span class="keyword">if</span> (<span class="built_in">document</span>.documentElement.scrollTop + <span class="built_in">document</span>.body.scrollTop &gt; <span class="number">100</span>) &#123;</span><br><span class="line">          <span class="built_in">document</span>.getElementById(<span class="string">"scrollto"</span>).style.display = <span class="string">"block"</span>;    </span><br><span class="line">   &#125;     </span><br><span class="line">   <span class="keyword">else</span> &#123;      </span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"scrollto"</span>).style.display = <span class="string">"none"</span>;    </span><br><span class="line">   &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="css定位" scheme="https://weixiaorensheng.github.io/categories/css%E5%AE%9A%E4%BD%8D/"/>
    
    
      <category term="css" scheme="https://weixiaorensheng.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>css样式</title>
    <link href="https://weixiaorensheng.github.io/cssstyle.html"/>
    <id>https://weixiaorensheng.github.io/cssstyle.html</id>
    <published>2018-09-15T10:21:55.000Z</published>
    <updated>2018-10-21T14:32:31.089Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="//music.163.com/outchain/player?type=0&id=2321407097&auto=1&height=430"></iframe><a id="more"></a><h1 id="蒙版遮罩"><a href="#蒙版遮罩" class="headerlink" title="蒙版遮罩"></a>蒙版遮罩</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mask</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(0, 0, 0, 0.6);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三横menu"><a href="#三横menu" class="headerlink" title="三横menu"></a>三横menu</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon-menu</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">1.2rem</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0.1rem</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0.3rem</span> <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border-top</span>: <span class="number">0.1rem</span> solid white;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">0.1rem</span> solid white;</span><br><span class="line"><span class="attribute">background-color</span>: white;</span><br><span class="line"><span class="attribute">background-clip</span>: content-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="监听input变化"><a href="#监听input变化" class="headerlink" title="监听input变化"></a>监听input变化</h1><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> placeholder=<span class="string">"请输入您的用户名"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"user"</span> value=<span class="string">"admin"</span>&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"password"</span> placeholder=<span class="string">"请输入您的密码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"pass"</span>&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> value=<span class="string">"登录"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn"</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">width:<span class="number">320</span>px;</span><br><span class="line">height:<span class="number">40</span>px;</span><br><span class="line">outline:none;</span><br><span class="line">border:<span class="number">1</span>px solid #<span class="type">DDDDDD</span>;</span><br><span class="line">padding-left:<span class="number">12</span>px;</span><br><span class="line">display:block;</span><br><span class="line">margin:<span class="number">20</span>px auto <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line">.box &#123;</span><br><span class="line">width:<span class="number">500</span>px;</span><br><span class="line">height:<span class="number">500</span>px;</span><br><span class="line">margin:<span class="number">100</span>px auto;</span><br><span class="line">&#125;</span><br><span class="line">.btn &#123;</span><br><span class="line">width:<span class="number">260</span>px;</span><br><span class="line">height:<span class="number">40</span>px;</span><br><span class="line">border-radius:<span class="number">5</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.orange &#123;</span><br><span class="line">background-color:orange!important;</span><br><span class="line">color:#fff!important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$(function() &#123;</span><br><span class="line">    $(<span class="string">"input"</span>).on(<span class="string">"input propertychange"</span>, function() &#123;</span><br><span class="line">        check(<span class="string">"user"</span>, <span class="string">"pass"</span>, <span class="string">"btn"</span>, <span class="string">"orange"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    function check(user, pass, btn, name) &#123;</span><br><span class="line">        <span class="keyword">var</span> user = $(<span class="string">"."</span> + user).<span class="keyword">val</span>();</span><br><span class="line">        <span class="keyword">var</span> pass = $(<span class="string">"."</span> + pass).<span class="keyword">val</span>();</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="string">""</span> &amp;&amp; pass != <span class="string">""</span>) &#123;</span><br><span class="line">            $(<span class="string">"."</span> + btn).addClass(name);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">"."</span> + btn).removeClass(name);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>1.oninput&amp;onchange：<br>oninput和onchange都是事件对象，当输入框的值发生改变时触发该事件。不同的是，oninput是在值改变时立即触发，而onchange是在值改变后失去焦点才触发，并且可以用在非输入框中，如：select等。</p><p>2.propertychange：<br>功能同oninput，用以替代oninput在IE9以下的不兼容性。</p><p>3.output:<br>output是一个HTML5标签,IE系列浏览不兼容，主要用于计算输出。如：<br>propertychange 和 input 事件:</p><p>1）propertychange只要当前对象的属性发生改变就会触发该事件</p><p>2）input是标准的浏览器事件，一般应用于input元素，当input的value发生变化就会发生，无论是键盘输入还是鼠标黏贴的改变都能及时监听到变化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    $(<span class="string">'#username'</span>).bind(<span class="string">'input propertychange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line"></span><br><span class="line">    $(<span class="string">'#result'</span>).html($(<span class="keyword">this</span>).val().length + <span class="string">' characters'</span>);  </span><br><span class="line"></span><br><span class="line">  &#125;);  </span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这里bind同时绑定了input和propertychange两个方法。</p><h1 id="同心圆"><a href="#同心圆" class="headerlink" title="同心圆"></a>同心圆</h1><pre><code>.icon-dot {    display: inline-block;    width: 10px;    height: 10px;    padding: 6px;    border: 2px solid #6bd5e1;    border-radius: 50%;    background-clip: content-box;    background-color: #6bd5e1;}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;450&quot; src=&quot;//music.163.com/outchain/player?type=0&amp;id=2321407097&amp;auto=1&amp;height=430&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
      <category term="css" scheme="https://weixiaorensheng.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://weixiaorensheng.github.io/tags/css/"/>
    
      <category term="style" scheme="https://weixiaorensheng.github.io/tags/style/"/>
    
  </entry>
  
  <entry>
    <title>前端进阶之路</title>
    <link href="https://weixiaorensheng.github.io/progress.html"/>
    <id>https://weixiaorensheng.github.io/progress.html</id>
    <published>2018-09-11T11:59:42.000Z</published>
    <updated>2018-10-21T14:27:23.061Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、认识前端"><a href="#一、认识前端" class="headerlink" title="一、认识前端"></a>一、认识前端</h1><a id="more"></a><h2 id="1-什么是前端"><a href="#1-什么是前端" class="headerlink" title="1.什么是前端"></a>1.什么是前端</h2><blockquote><p>  Web前端开发工程师是一个很新的职业，在国内乃至国际上真正开始受到重视的时间不超过10年。Web前端开发是从网页制作演变而来的，名称上有很明显的时代特征。在互联网的演化进程中，网页制作是Web 1.0时代的产物，那时网站的主要内容都是静态的，用户使用网站的行为也以浏览为主。<br>  2005年以后，互联网进入Web 2.0时代，各种类似桌面软件的Web应用大量涌现，网站的前端由此发生了翻天覆地的变化。网页不再只是承载单一的文字和图片，各种丰富媒体让网页的内容更加生动，网页上软件化的交互形式为用户提供了更好的使用体验，这些都是基于前端技术实现的。<br>  随着WEB2.0概念的普及和W3C组织的推广，网站重构的影响力正以惊人的速度增长。</p></blockquote><blockquote><p> 其实中国的“web前端开发攻城狮”这个职位好多人并不知道是怎么叫出来的，那么我偷偷 &lt;(￣︶￣)&gt;告诉你：其实是淘宝团队，发明出来的本土化的名称，因为历史原因，淘宝在2005以后迅速崛起，并且爆发式的访问量，让淘宝网的用户体验受到巨大考验和急需前进。<br>然后淘宝官方第一次有了【 web前端开发 】这个字眼和招聘职位，或许其他网站也想到了这样一种描述，但是毕竟知名度巨高的淘宝，受关注度自然高，口碑相传，就把【前端开发】这个叫法发扬光大了。<br>在早期点Web前端不叫前端，而是被亲切的叫做“网页设计师”，没错你没看错，就是这个名字，我记得那时候 【网页三剑客】的说法满天飞，你掌握了这3贱客，真的很贱，就可以被人叫做网页设计师了。</p></blockquote><h3 id="网页三剑客：DW-FW-Falsh"><a href="#网页三剑客：DW-FW-Falsh" class="headerlink" title="网页三剑客：DW\FW\Falsh"></a>网页三剑客：DW\FW\Falsh</h3><img src="/progress/dff.jpg" title="[three]"><blockquote><p>网页三剑客（Flash、Dreamweaver、Firewoks) 并称为Macromedia的网页制作三剑客，由于是同一公司的产品，因而在功能上有着一个非常紧密的结合 。后来Firewoks被Adobe这个变态的巨头收购以后，ps就基本取代Firewoks来做设计网页的工作了，虽然我知道现在还有人用，估计是一种怀念和某些好用的切图功能吧。<br>而那时候的网页设计师 如果要入此道，必须要掌握的就是Dreamweaver，并不是说只有他能写html 和 css ，而是它在当时的自动提示实在太好用、太强大了，简直不用费脑细胞，你就可以轻轻松松的完成你所想。在当时前端工具和编辑器贫乏的时代，这个绝对是神奇级别了（当然后来 写的多了都熟悉基本不用提示的）。当年还有很多基于Dreamweaver构建网站的教程，那时候真的是个基情满满的年代，这些工具类的历史产物，有兴趣的朋友可以去了解一下就好了，我们不在多舌。</p></blockquote><h2 id="2-web前端开发入门，需要掌握哪些基础"><a href="#2-web前端开发入门，需要掌握哪些基础" class="headerlink" title="2.web前端开发入门，需要掌握哪些基础"></a>2.web前端开发入门，需要掌握哪些基础</h2><blockquote><p>虽说这个问题很大，但是这个话题就很好回答了；因为现在前端如此眼花缭乱，技能多多，都是基于此三板斧：<br>HTML、CSS、JavaScript</p></blockquote><blockquote><p>HTML： 是构成网页展示的基础，是一种很简单可视化的标识语言，说白了就是 一是一，你写二就出二。网上所有的网页网站，不管多么牛鼻最后都会转化成html，被浏览器渲染出来，用作展示。<br>CSS： 又称作样式表，简单点说就是html的外衣，将html包装的明艳动人。<br>JavaScript：是一种直译式脚本语言，非常灵活，可以在任何浏览器上开发与调试的一种动态类型、弱类型、基于原型的语言。<br>（关于js这个让人又爱又恨的语言，我们到后面会着重介绍和学习，因为掌握此技能， 你就拥有了全世界，说全世界是扯淡的，说白了拥有了 money和妹子）</p></blockquote><h2 id="3-web前端开发-”到底有前途吗？"><a href="#3-web前端开发-”到底有前途吗？" class="headerlink" title="3. web前端开发 ”到底有前途吗？"></a>3. web前端开发 ”到底有前途吗？</h2><p>如果你在2012年以前 这么问，或许很多人会思考一下，给你说不知道，应该没后端编程有前途吧，或者直接说，web前端有啥啊？不就写个网页、js吗？工资又低。。。。</p><p>随着html5的普罗天下，css3的风靡全球，随着nodejs 的崛起，JavaScript这个最容易被人误解的语言，终于散发了它本该有的光芒</p><blockquote><p>由于现在是web应用时代，各种尺寸的电子设备，增长式的爆发，只要和屏幕有关的 就是颜值，颜值代表了一切，你说前端有前途吗？<br>html5、网页游戏风靡全球，需要页面展现的东西 都是前端范畴，你说有前途吗？</p></blockquote><h2 id="4-web前端的分类"><a href="#4-web前端的分类" class="headerlink" title="4.web前端的分类"></a>4.web前端的分类</h2><p>“ 入一行，要先知一行 ”；我们来看看web前端开发职位 无论什么门派都要做到的一些基本工作职责。</p><p>首先，你必须是一个合格的“页面仔”，这个叫法不好听，但很生动；<br>我们都知道，所有呈现的内容都是基于HTML 网页的。<br>如果你的html、css（包括现在的HTML5+CSS3）基础不会，或者不够扎实，都很难在有大的进步，或者你的JS 很好，但布局基础不行，还是不能算合格的web前端。</p><hr><p>其次，前端主要负责实现视觉和交互功能，以及与后端服务器通信，完成业务逻辑。现在前端的核心价值在于对用户体验的极致追求。<br>那么我们靠什么来提升用户体验和人性化操作，让用户觉得体验牛x、舒服呢？（当然细分厉害的公司，会有专门的 用户体验攻城狮）<br>当然是我们自始自终的主角 JavaScript了，毕竟它最初就是为浏览器而生的脚本语言。</p><hr><p>然而，JS这门语言并不是一种强类型语言，更像是一种解释型语言，所以很多属性，在不同的浏览器环境解释有很大不同导致，效果和性能千差万别，而且很多属性之长，之多，之巨都很有工作量。</p><hr><p>之后，就出现了Jquery 这种的框架神器，由于其好用，简单，效果多样，兼容完美，高效率等特性，迅速席卷全世界，所以如果想入门，jquery 这个东西你是逃不掉的，而且利用它简单的语法，你会很快将一些效果实现出来，迅速提升兴趣。</p><hr><p>再后，既然涉及到视觉 和用户体验，那么UI 设计知识，你肯定要涉及或者懂一些设计方面的技能和基本素养，比如PS的一些基本操作，切图，和颜色值（比如会改个字，隐藏个图层，改个尺寸，变个颜色什么滴），屏幕适配方案等，讲道理说：平时并不需要我们做，但技能包里绝对要有。</p><hr><p>最后，服务器知识+后端语言基础，这个职责和话题就比较hight了，到后面我们会一一解释。</p><hr><p>总之，web前端同样是程序员，由于前端是位于后端程序和界面设计师之间的岗位，相当于中间桥梁，要完成三者的对接，涉及到广泛 的知识，规模大到工程级，也就有了前端工程师的说法（某人总结，很是到位）。</p><hr><p>根据web前端的细分工种 和 业务不同，我无耻的把她比拟出来几个门派，供大家参考，也让无比庞大的前端划分变得有趣一些，不然下面我放一张图， 你看了会晕菜。<br>这里我先简单说几种，我们常常熟知的几个门派<br>比如：</p><p>【少林派】：七十二般武艺样样精通 - web网站开发</p><p>【武当派】：以柔克刚 - 移动APP开发</p><p>【峨嵋派】：倾国倾城 - canvas 数据可视化</p><p>【华山派】：剑法精湛 - nodejs开发</p><p>【逍遥派】：潇洒飘逸 - HTML5游戏</p><blockquote><p>让你晕菜的技能树 ，客观您感受一下先</p></blockquote><img src="/progress/tree.jpg" title="[tree]"><h1 id="二、学习前端"><a href="#二、学习前端" class="headerlink" title="二、学习前端"></a>二、学习前端</h1><h2 id="1-基础"><a href="#1-基础" class="headerlink" title="1.基础"></a>1.基础</h2><h3 id="HTML-CSS基础"><a href="#HTML-CSS基础" class="headerlink" title="HTML + CSS基础"></a><strong><em>HTML + CSS基础</em></strong></h3><p>掌握HTML的标签使用、排版、CSS布局、样式美化和浏览器兼容性。HTML进阶、CSS进阶、div+css布局、HTML+css整站开发。</p><p> html + css 这部分建议在 w3school 在线教程 上学习，边学边练，每个属性后还有在线测试。 然后过一遍之后可以模仿一些网站做些页面。记住这个一定要多练 多练 多练 ，最重要的事儿 还得我说三遍？</p><blockquote><p>忍得住寂寞枯燥，才能拿得到高薪</p></blockquote><p>Codeademy上的<a href="http://www.codecademy.com/en/tracks/web" target="_blank" rel="noopener">html&amp;css</a>课程——在线交互式编程平台，弄清楚基本概念和基本语法<br>w3school上的HTML/CSS教程——技术手册式的教程，比较全面，照着实例敲一遍</p><h3 id="JavaScript的基础"><a href="#JavaScript的基础" class="headerlink" title="JavaScript的基础"></a><strong><em>JavaScript的基础</em></strong></h3><p>掌握js的基本语法、条件、语句和循环，并学习增强逻辑的常用算法。<br>Js基础教程、js内置对象常用方法、常见DOM树操作大全、ECMAscript、DOM、BOM、定时器和焦点图。<br>常见特效、例如：tab、导航、整页滚动、轮播图、JS制作幻灯片、弹出层、手风琴菜单、瀑布流布局、滚动事件、滚差视图。<br>JS高级特征：<br>正则表达式、排序算法、递归算法、闭包、函数节流、作用域链、基于距离运动框架、面向对象基础、</p><p>javascript 要学的内容实在很多，如果没有其他编程语言的基础的话，学起来可能要费些力，还是建议先在 w3school上学习一些基本语法 和定义。<br>然后你必须要看书，然后实践（好多人问 有没有快速捷径，我只能告诉你：如果有捷径，码农们就不用天天如此苦逼了吧）。</p><p>JQuery：基础使用<br>悬着器、DOM操作、特效和动画、方法链、拖拽、变形、JQueryUI组件基本使用。</p><h2 id="2-响应式开发"><a href="#2-响应式开发" class="headerlink" title="2.响应式开发"></a>2.响应式开发</h2><h3 id="HTML5和移动Web开发"><a href="#HTML5和移动Web开发" class="headerlink" title="HTML5和移动Web开发"></a>HTML5和移动Web开发</h3><p>HTML5<br>HTML5新语义标签、HTML5表单、音频和视频、离线和本地存储、SVG、Web Socket、Canvas.</p><p>CSS3:<br>CSS3新选择器、伪元素、脸色表示法、边框、阴影、background系列属性改变、Transition、动画、景深和深透、3D效果制作、Velocity.js框架、元素进场、出场策略、炫酷CSS3网页制作。</p><p>Bootstrap:<br>响应式概念、媒体查询、响应式网站制作、删格系统、删格系统原理、Bootstrap常用模板、LESS和SASS。</p><p>移动Web开发：<br>它可以由JS在移动终端上基于jQuery移动/ Zepto框架。<br>有了这两项主要技能，你就可以满足市场前端工程师的基本要求。根据市场反馈数据，工资一般在八千至一万三千澳元/月之间。<br>跨终端WEB和主流设备简介、视口、流式布局、弹性盒子、rem、移动终端JavaScript事件、手机中常见JS效果制作、Zepto.js、手机聚划算页面、手机滚屏。</p><h2 id="3-HTTP服务和AJAX编程"><a href="#3-HTTP服务和AJAX编程" class="headerlink" title="3.HTTP服务和AJAX编程"></a>3.HTTP服务和AJAX编程</h2><p>WEB服务器基础：<br>服务器基础知识、Apache服务器和其他WEB服务器介绍、Apache服务器搭建、HTTP介绍。</p><p>PHP基础：<br>PHP基础语法、使用PHP处理简单的GET或者POST请求、</p><p>AJAX上篇：<br>充分理解Ajax原理，掌握Ajax原生和jQuery的ajax用法。<br>Ajax简介和异步的概念、Ajax框架的封装、XMLHttpRequest对象详细介绍方法、兼容性处理方法、Ajax框架的封装、Ajax中缓存问题、XML介绍和使用。</p><p>AJAX下篇：<br>JSON和JSON解析、数据绑定和模板技术、JSONP、跨域技术、图片预读取和lazy-load技术、JQuery框架中的AjaxAPI、使用Ajax实现爆布流案例额。</p><h2 id="4-框架的使用"><a href="#4-框架的使用" class="headerlink" title="4.框架的使用"></a>4.框架的使用</h2><p>首先有一点，ES6是一定要去学习的，在Vue2.X，AngularJS2，React中都对ES6提供了原生的支持，以后很多新的特性肯定也会使用ES6的语法去编写。</p><p>Web开发工作流：<br>GIT/SVN、Yeoman脚手架、NPM/Bower依赖管理工具、Grunt/Gulp/Webpack。</p><p>MVC/MVVM/MVW框架：<br>Angular.js、Backbone.js、Knockout/Ember。</p><p>常用库：<br>React.js、Vue.js、Zepto.js。</p><p>AngularJS</p><p>AngularJS在由AngularJS1升级到AngularJS2以后，完全是一个新的东西，原来在AngularJS1中的controller，service，filter等内容在AngularJS2中都变成一个个的module，component。</p><p>所以如果还没学过AngularJS部分内容的同学可以直接选择学习AngularJS2。但是需要注意的是AngularJS2是以Typescript语言编写的，所以对Typescript的学习就必不可少了。</p><p>Vue</p><p>个人认为Vue学习是相对来说成本比较低的框架，目前官方文档已经很详细，关于Vue全家桶的内容像Vue-resource，Vue-router，Vuex等越来越完善，而且在Github上开源是项目也有很多，可以很容易掌握。感兴趣的可以关注下我自己用Vue开发的一个简书网站。</p><p>React</p><p>React采用了Virtual DOM这一个很独特的概念，提高了页面渲染的效率。但是也是由于Virtual DOM的存在，在编程方式上，React和Vue,AngularJS稍有不同，如果习惯了Vue开发，可能还不太习惯React的开发。</p><p>在针对框架层面，在学习之后，应该能回答下面这些问题。</p><p>AngularJS和Vue的双向数据绑定的实现</p><p>Vuex工作机制</p><p>React的Virtual DOM基本实现，如何自己实现一个Virtual DOM算法</p><h2 id="5-HTML5原生移动应用开发"><a href="#5-HTML5原生移动应用开发" class="headerlink" title="5.HTML5原生移动应用开发"></a>5.HTML5原生移动应用开发</h2><p>Cordova：<br>WebApp/NativeApp/HybirdApp简介、Cordova简介、与PhoneGap之间的关系、开发环境搭建、Cordova实战（创建项目，配置，编译，调试，部署发布）。</p><p>Ionic：<br>Ionic简介和同类对比、模板项目解析、常见组件及使用、结合Angular构建APP、常见效果（下拉刷新，上拉加载，侧滑导航，选项卡）。</p><p>React Native：<br>React Native简介、React Native环境配置、创建项目，配置，编译，调试，部署发布、原生模块和UI组件、原生常用API。</p><p>HTML5+：<br>HTML5+中国产业联盟、HTML5 Plus Runtime环境、HBuilder开发工具、MUI框架、H5+开发和部署。</p><h2 id="6-模块化-amp-组件化"><a href="#6-模块化-amp-组件化" class="headerlink" title="6.模块化&amp;组件化"></a>6.模块化&amp;组件化</h2><p>前端开发已经从原来的整体化开发发展到现在的模块化开发，甚至是组件化开发，开发过程愈发精细，讲求的是代码的可复用性。<br>以前一个页面从上到下一次编写的过程，现在已经发展为先将页面进行拆分成模块甚至是组件，不同的人关注不同的模块，组件，提高开发效率。<br>在模块化开发中，不得不提到CommonJS，AMD和CMD规范，并且有不同的实现，比如RequireJS。对于模块化编程的规范已经有很多的文章有讲到，可以认真去学习下。<br>iview、zanui等框架都是组件化开发，开发时直接使用其组件即可。</p><h2 id="7-构建工具"><a href="#7-构建工具" class="headerlink" title="7.构建工具"></a>7.构建工具</h2><p>前端开发是离不开构建工具的，自己写的代码如何打包压缩，ES6的代码如何编译成JS，Sass，less代码如何编译成原生CSS，这些都是构建工具去完成的。<br>有了构建工具，可以极大的提高我们的开发速度，这里不得不提到的就是gulp+webpack。</p><p>gulp是一种任务驱动型的构建工具，通过管道处理数据流，提高了数据处理速度，而且其提供的一系列插件也很方便使用。</p><p>而webpack的作用就是把所有浏览器端需要发布的静态资源做相应的准备，比如资源的解析、合并和打包，它提供了强大的加载器和插件机制，例如vue-loader提供了对vue的支持，babel-loader提供了对ES6的支持。</p><p>其他的构架工具还有工程化构建的Yeoman，Slush，FIS等。</p><h2 id="8-Node-js全栈开发"><a href="#8-Node-js全栈开发" class="headerlink" title="8. Node.js全栈开发"></a>8. Node.js全栈开发</h2><p>前端开发到最后就是要走全栈开发的道路了，全栈开发以NodeJS作为服务端语言，基于NodeJS实现的服务端框架有Express，KOA，目前也发展的越来越成熟。</p><p>既然讲到全栈开发，肯定会通过服务端语言操纵数据库，因此对于数据库的知识也肯定要掌握的。</p><p>快速入门<br>Node.js发展、生态圈、Io.js、Linux/Windows/OS X环境配置、REPL环境和控制台程序、异步编程，非阻塞I/O、模块概念，模块管理工具、开发流程，调试，测试。</p><p>核心模块和对象：<br>全局对象global，process，console，util、事件驱动，事件发射器、加密解密，路径操作，序列化和反序列化、文件流操作、HTTP服务端与客户端、Socket.IO。</p><p>Web开发基础：<br>HTTP协议，请求响应处理过程、关系型数据库操作和数据访问、非关系型数据库操作和数据访问、原生的Node.js开发Web应用程序、Web开发工作流、Node.js开发Blog案例。</p><p>快速开发框架：<br>Express简介+MVC简介、Express常用API、Express路由模块、Jade/Ejs模板引擎、使用Express重构Blog案例、Koa等其他常见MVC框架。</p><hr><p>以下内容都是经过我自己本身的学习路线经验，还有网络各路大神共同整理的资料 汇总，帮助源源不断入坑的新人更好的学习。</p><p>前端书籍必读、必买（本帅认为）<br>★★ 越多，推荐等级越高，和难度无关。最好按照我给的顺序入门，这样不会让你枯燥，想放弃，如果先推荐经典的厚的，满篇定义，我估计是害你们放弃。</p><p>【JavaScript】</p><p>先说 JavaScript,因为前面说了，css最好跟着视频练习，毕竟都是可视化的，像做艺术。</p><p>【第一本】《JavaScript DOM编程艺术》★★★★★</p><img src="/progress/one.png" title="[one]"><p>最好的JS入门书籍，最让人有兴趣读完的那种书。<br>它通过一个 幻灯片 案例，从头到尾教你实现出来，最后效果实现的同时，基本的JS常用属性，你也就滚瓜烂熟了，很有成就感。（个人很偏向这种风格书籍，此书让我彻底爱上前端js）<br>一目了然地告诉你如何用JS操作DOM（这是浏览器端编程的基本功），还灌输了最符合标准的编程理念。可惜有点老，最新一版是2010年的。不过不影响阅读和实现，全部按照最新ES5属性就行了。</p><p>【第二本】《JavaScript高级程序设计》 ★★★★</p><img src="/progress/two.png" title="[two]"><p>又称红宝书，（我喜欢叫 望眼镜）<br>雅虎首席前端架构师，YUI的作者Zakas出品。虽然书名带了“高级”二字，但是讲得都很基础的属性内容，事无巨细。<br>关键一点是翻译的也很到位，并不是如嚼蜡一般，这很重要。看此书，我建议配着下面的犀牛书一起 看效果更佳。</p><p>【第三本】《JavaScript权威指南》 ★★★★★</p><img src="/progress/three.png" title="[three]"><p>著名的淘宝前端团队翻译的，看译者列表都是一堆前期大神。<br>1<br>这本书又叫犀牛书，被国人誉为：javascript开发者的圣经。网上对此书评价很多很好，大概意思是说这 本书是一本JavaScript文档手册，更适合当作字典和备忘录查询来使用。<br>我也是对这本书有很厚的感情和依赖（忘了属性就拿来翻翻，总有收获），个人感觉这本书还是写得枯燥了些，毕竟是工具性质，不适合当作第一本入门来看，不过内容绝对是五颗星，无可挑剔！神书</p><p>【第四本】《JavaScript语言精粹》 ★★★★★</p><img src="/progress/four.png" title="[four]"><p>作者是大名鼎鼎的 【老道】，我的JS 偶像，我github第一个关注的就是这个大胡子叔叔。<br>他是 JSON格式的发明和维护者，也有很多著作和对JS 这门语言的超多贡献，可见此人功力绝对顶级！<br>这本书，属于稍微入门以后看的，了解了一些中高级概念 比如：闭包、原型链、作用域链、继承封装等以后，<br>看此书有如神助，看一页相当于犀牛书几十页的讲解（不吹牛逼，当时我是这感觉的）</p><p>【CSS】类， 如果视频看完了，练习的熟练了，你还需要一些书的推荐和查询，也是有必要的，我再来给你罗列几本经典的收藏书，买不买均可的。</p><p>【第一本】《Head first HTML&amp;CSS》 ★★★<br><img src="/progress/cssone.png" title="[one]"></p><p>好的入门书。看两遍就对HTML &amp; CSS 有个大概印象了。<br>此时把w3cschool作为备查手册收藏起来，结合此书，事半功倍，成就感爆棚。</p><p>【第二本】《CSS权威指南（第三版）》 ★★★★<br><img src="/progress/csstwo.png" title="[two]"></p><p>最权威的CSS书籍，除了阅读W3C的文档外的不二选择（就是翻译太操蛋，可能有的词你以为是火星语，不过不影响阅读）。<br>有时间可以反复看，有css3内容，并当做字典随时查。类似犀牛书</p><p>【第三本】《图解CSS3：核心技术与案例实践》 ★★★<br><img src="/progress/cssthree.png" title="[three]"></p><p>这本书讲解的是最新的CSS3（前几本书停留在CSS2.1时代，2.1是基础），CSS3也是必学的，不然真的跟不上时代了。</p><p>【第四本】《CSS禅意花园》 ★★★★<br><img src="/progress/cssfour.png" title="[four]"></p><p>这里写图片描述<br>这本书很值得期待，我看过PDF版本的，那时候还没翻译出来，翻译的也一般，不过作者是巨牛逼的，听说对css理解的就像自己的左右手，光靠写CSS 他年薪就轻松百万了。。汗颜！思路清晰，图文并茂，还解决一些疑难杂症和高级技巧，类似于JS的语言精粹了，大神级别。</p><p>好了，差不多就推荐到这里，CSS这基本是基于情怀，罗列一下，买不买都没必要，想当年我学CSS 是挨着几个仅有的视频，一个属性一个属性的练习，还有IE6 各种兼容问题，虐到爆，那酸爽（现在你们是性福的，基本不用兼容IE6 这个老东西了，）。</p><p>真正起到决定作用的，还是JS语言的掌握和实践，JS能力越强 基础越稳固，你的前端能力就会越好， 自然薪资越高，所以现实点说大家，大家一起努力吧，让money 都到碗里来</p><p>（有些童鞋认为：从来不需要买纸质书，我全程PDF就行了嘛，不过我建议有些书还是要纸质的，这样有感觉，也可以做笔记，甚至随时当工具书字典来查询，由于前端的特殊性和js语言的属性之繁多庞杂，我建议你还是要买纸质的书。帮助很大，而且我告诉你有了钱要补上正版呃）</p><p>那么PDF截图奉上，嘿嘿 如果需要请到此大神网站 网盘下载，应有尽有，此处应该有掌声！</p><p>地址：<a href="http://www1.w3cfuns.com/feres.php?do=picture&amp;listtype=book" target="_blank" rel="noopener">http://www1.w3cfuns.com/feres.php?do=picture&amp;listtype=book</a></p><h3 id="前端网站大汇总"><a href="#前端网站大汇总" class="headerlink" title="前端网站大汇总"></a>前端网站大汇总</h3><p>1、前端知识体系：<br>前端知识体系及修炼攻略：<a href="http://blog.csdn.net/borishuai/article/details/8676573——对前端知识体系剖析的非常好，尤其是最后对前端的阶段性划分，对前端学习很有指导意义，推荐！" target="_blank" rel="noopener">http://blog.csdn.net/borishuai/article/details/8676573——对前端知识体系剖析的非常好，尤其是最后对前端的阶段性划分，对前端学习很有指导意义，推荐！</a><br>前端开发知识结构：<a href="https://github.com/JacksonTian/fks——有个前端知识框架的思维导图，给了很多链接和好书，推荐！" target="_blank" rel="noopener">https://github.com/JacksonTian/fks——有个前端知识框架的思维导图，给了很多链接和好书，推荐！</a><br>2、技术资讯类<br>W3Cfuns : <a href="http://www.w3cfuns.com/——国内最大的前端站，比较全" target="_blank" rel="noopener">http://www.w3cfuns.com/——国内最大的前端站，比较全</a><br>大前端：<a href="http://www.daqianduan.com/——没有W3Cfuns那么杂，有些wodpress的主题，“前端导航”也比较好用" target="_blank" rel="noopener">http://www.daqianduan.com/——没有W3Cfuns那么杂，有些wodpress的主题，“前端导航”也比较好用</a><br>W3Cplus:<a href="http://www.w3cplus.com/——也是比较全，有个“国外优秀译文”，非常喜欢" target="_blank" rel="noopener">http://www.w3cplus.com/——也是比较全，有个“国外优秀译文”，非常喜欢</a><br>前端观察 ：<a href="http://www.qianduan.net/——专注于前端设计与开发的博客，比较有深度，排版干净，推荐！*" target="_blank" rel="noopener">http://www.qianduan.net/——专注于前端设计与开发的博客，比较有深度，排版干净，推荐！*</a>*<br>前端乱炖 ：<a href="http://www.html-js.com/——有点像前端的知乎，有问答平台和专栏啥的" target="_blank" rel="noopener">http://www.html-js.com/——有点像前端的知乎，有问答平台和专栏啥的</a><br>3、技术教程、文档类<br>慕课网：<a href="http://www.imooc.com/course/program" target="_blank" rel="noopener">http://www.imooc.com/course/program</a><br>——超级实用的视频教程类网站，各种小实例，非常适合照着“前端学习计划”计划学习<br>codeademy : <a href="http://www.codeademy.com/——英文，简单有趣的互动编程学习网站，非常适合入门，中文版是http://www.fenby.com/" target="_blank" rel="noopener">http://www.codeademy.com/——英文，简单有趣的互动编程学习网站，非常适合入门，中文版是http://www.fenby.com/</a><br>W3schoo在线教程l: <a href="http://www.w3school.com.cn/——中文，适合入门，教程相当全，在线实例可以敲，可惜较浅，有些地方不太准确和深入" target="_blank" rel="noopener">http://www.w3school.com.cn/——中文，适合入门，教程相当全，在线实例可以敲，可惜较浅，有些地方不太准确和深入</a><br>火狐开发者网络MDN：<a href="https://developer.mozilla.org/zh-CN/——中文，不仅有技术文档，而且有相当多的参考资料和资源、工具，推荐！" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/——中文，不仅有技术文档，而且有相当多的参考资料和资源、工具，推荐！</a><br>W3C标准：<a href="http://www.w3.org/standards/" target="_blank" rel="noopener">http://www.w3.org/standards/</a><br>——英文，不解释，官方文档，真前端和伪前端就在于此。可惜英文的，而且可读性差。极不适合入门，适合提高。<br>Web平台文档：<a href="http://www.webplatform.org/——英文，权威性仅次于W3C标准，可读性高于W3C标准，W3C官方认可，高质量。" target="_blank" rel="noopener">http://www.webplatform.org/——英文，权威性仅次于W3C标准，可读性高于W3C标准，W3C官方认可，高质量。</a></p><h3 id="一些不错的网站"><a href="#一些不错的网站" class="headerlink" title="一些不错的网站"></a>一些不错的网站</h3><p>github：没啥好说的，多阅读别人的源码，多上传自己的源码，向世界各地的大牛学习<br>codepen：感受前端之美的必选之地，里面有很多酷炫的效果和优秀的插件<br>echojs：快速了解js新资讯的网站<br>stackoverflow和segmentfault：基本上各种问题都能在上面获得解答<br>google web fundamentals：每篇文章都适合仔细阅读<br>static files：开放的CDN，很好用<br>iconfont：阿里的矢量图标库，非常不错，支持CDN而且支持项目<br>html5 rocks: 一个不错的网站，很多浏览器的新特性以及前沿的技术，都能在这上面找到文章<br>css tricks：如何活用CSS，以及了解CSS新特性，这里可以满足你<br>JavaScript 秘密花园 JavaScript初学必看，非常不错<br>w3cplus：一个前端学习的网站，里面的文章质量都挺不错的<br>node school：一个不错的node学习网站<br>learn git branch：一个git学习网站，交互很棒<br>前端乱炖：一个前端文章分享的社区，有很多优秀文章<br>正则表达式：一个正则表达式入门教程，非常值得一看<br>各路大牛的博客：这个太多了，就不贴了，知乎上有很全的<br>各种规范的官方网站，不懂得时候读规范</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、认识前端&quot;&gt;&lt;a href=&quot;#一、认识前端&quot; class=&quot;headerlink&quot; title=&quot;一、认识前端&quot;&gt;&lt;/a&gt;一、认识前端&lt;/h1&gt;
    
    </summary>
    
      <category term="小程序" scheme="https://weixiaorensheng.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="前端" scheme="https://weixiaorensheng.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>css常用命名</title>
    <link href="https://weixiaorensheng.github.io/name.html"/>
    <id>https://weixiaorensheng.github.io/name.html</id>
    <published>2018-09-10T08:00:26.000Z</published>
    <updated>2018-10-21T13:30:38.406Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="class常用命名"><a href="#class常用命名" class="headerlink" title="class常用命名"></a>class常用命名</h2><a id="more"></a><p>页头:header</p><p>登录条:loginBar</p><p>标志:logo</p><p>侧栏:sideBar</p><p>广告:banner</p><p>导航:nav</p><p>子导航:subNav</p><p>菜单:menu</p><p>子菜单:subMenu</p><p>搜索:search</p><p>滚动:scroll</p><p>页面主体:main</p><p>内容:content</p><p>标签页:tab</p><p>文章列表:list</p><p>提示信息:msg</p><p>小技巧:tips</p><p>栏目标题:title</p><p>友情链接:friendLink</p><p>页脚:footer</p><p>加入:joinus</p><p>指南:guild</p><p>服务:service</p><p>热点:hot</p><p>新闻:news</p><p>下载:download</p><p>注册:regsiter</p><p>状态:status</p><p>按钮:btn</p><p>投票:vote</p><p>合作伙伴:partner</p><p>版权:copyRight</p><p>CSSID的命名</p><p>外套:wrap</p><p>主导航:mainNav</p><p>子导航:subnav</p><p>页脚:footer</p><p>整个页面:content</p><p>页眉:header</p><p>页脚:footer</p><p>商标:label</p><p>标题:title</p><p>主导航:mainNav(globalNav)</p><p>顶导航:topnav</p><p>边导航:sidebar</p><p>左导航:leftsideBar</p><p>右导航:rightsideBar</p><p>旗志:logo</p><p>标语:banner</p><p>菜单内容1:menu1Content</p><p>菜单容量:menuContainer</p><p>子菜单:submenu</p><p>边导航图标:sidebarIcon</p><p>注释:note</p><p>面包屑:breadCrumb(即页面所处位置导航提示)</p><p>容器:container</p><p>内容:content</p><p>搜索:search</p><p>登陆:login</p><p>功能区:shop(如购物车，收银台)</p><p>当前的current</p><p>样式文件命名</p><p>主要的:master.css</p><p>布局版面:layout.css</p><p>专栏:columns.css</p><p>文字:font.css</p><p>打印样式:print.css</p><p>主题:themes.css</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;class常用命名&quot;&gt;&lt;a href=&quot;#class常用命名&quot; class=&quot;headerlink&quot; title=&quot;class常用命名&quot;&gt;&lt;/a&gt;class常用命名&lt;/h2&gt;
    
    </summary>
    
      <category term="class命名" scheme="https://weixiaorensheng.github.io/categories/class%E5%91%BD%E5%90%8D/"/>
    
    
      <category term="css" scheme="https://weixiaorensheng.github.io/tags/css/"/>
    
  </entry>
  
</feed>
